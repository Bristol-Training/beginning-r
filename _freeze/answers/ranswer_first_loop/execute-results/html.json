{
  "hash": "615853463cee07e59989f74bc39cb5f9",
  "result": {
    "engine": "knitr",
    "markdown": "Adding more items to the list makes the loop go around more times\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_words <- c(\"Hello\", \"R\", \"Goodbye\", \"R\")\n\nfor (word in my_words) {\n    cat(word, \" \")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nHello  R  Goodbye  R  \n```\n\n\n:::\n:::\n\n\n\n\n\n\nA vector cannot have a mixture of data types, so all elements are converted to strings.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_words <- c(\"Hello\", \"R\", as.numeric(404), \"Goodbye\", \"R\", 42)\n\nfor (word in my_words) {\n    cat(word, \"-\", class(word), \"\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nHello - character \nR - character \n404 - character \nGoodbye - character \nR - character \n42 - character \n```\n\n\n:::\n:::\n\n\n\n\n\n\nLooping over an empty list does not print anything\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_words <- vector()\n\nfor (word in my_words) {\n    cat(word, \" \")\n}\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}